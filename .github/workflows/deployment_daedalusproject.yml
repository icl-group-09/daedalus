name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python version
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Lint and test
        run: |
          cd api
          pip install pipenv
          pipenv install 
          pipenv run pyright $(git ls-files '*.py')
          pipenv run pylint $(git ls-files '*.py')
          pipenv run python -m unittest discover tests
      
      - name: Create and start virtual environment
        run: |
          mv api/* .
          mv api/.env .
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies from requirements.txt
        run: |
          pip install -r requirements.txt

      - name: Install dependencies frontend
        run: |
          cd web
          npm install

      - name: Run the frontend tests
        run: |
          cd web
          npm test

      - name: Build
        run: |
          cd web
          npm run build
          
      - name: Nuke node_modules
        run: |
          cd web
          rm -rf node_modules

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            . 
            !venv/

  deploy-back:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'daedalusproject'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_2967E8EA9C1C4074B29E1992D3F84454 }}
